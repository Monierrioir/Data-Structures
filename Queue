#include <stdio.h>
#include <stdlib.h>

typedef struct node{
    int data;
    struct node *next;
}node;

struct node *front=NULL;
struct node *rear=NULL;

int enqueue(int data){
    struct node *new;
    new=(struct node*) malloc(sizeof(struct node));
    new->data=data;
    new->next=NULL;

    if(front==NULL && rear==NULL){
        front=rear=new;
    }
    else{
        rear->next=new;
        rear=new;
    }
    return 0;
}
void display(){
    struct node *temp;
    if(front==0 && rear==0){
        printf("The  queue is empty\n");
    }
    else{
        temp=front;
        while(temp!=NULL){
            printf("%d\n",temp->data);
            temp=temp->next;
        }
    }

}
void peek(){
    if(front==0 && rear==0)
        printf("Queue i empty.\n");
    else{
        printf("Front element is %d\n",front->data);
    }
}
void dequeue(){
    struct node *temp;
    temp=front;
    if(front==0 && rear==0)

        printf("Queue is empty\n");
    else{
        printf("Removed element is %d\n",front->data);
        front=front->next;
        free(temp);
    }
}

int main() {
display();
enqueue(8);
    enqueue(2);
    enqueue(-1);
    display();
    dequeue();
    display();
    peek();
    enqueue(4);
    display();


    return 0;
}
